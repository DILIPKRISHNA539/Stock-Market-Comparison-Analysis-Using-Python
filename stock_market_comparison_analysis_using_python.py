# -*- coding: utf-8 -*-
"""Stock Market Comparison Analysis using Python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/171JwDPY89wy15TtMujaqtMX917Ai1P1v
"""

pip install yfinance

import pandas as pd
import yfinance as yf
import plotly.io as pio
import plotly.graph_objects as go
pio.templates.default = "plotly_white"

amazon_ticker = "AMZN"
google_ticker = "GOOGL"

start_date = '2024-01-01'
end_date = '2024-05-31'

amazon_data = yf.download(amazon_ticker, start=start_date, end=end_date)
google_data = yf.download(google_ticker, start=start_date, end=end_date)

amazon_data ['Daily_Return'] = amazon_data['Adj Close'].pct_change()
google_data['Daily_Return'] = google_data['Adj Close'].pct_change()

fig=go.Figure()
fig.add_trace(go.Scatter(x=amazon_data.index, y=amazon_data['Daily_Return'], name='Amazon',line=dict(color='blue')))
fig.add_trace(go.Scatter(x=google_data.index, y=google_data['Daily_Return'], name='Google',line=dict(color='green')))
fig.update_layout(title='Daily Returns For Amazon and Google', xaxis_title='Date', yaxis_title='Daily Return',legend=dict(x=0.02, y=0.95))
fig.show()

amazon_cummulative_return = (1 + amazon_data['Daily_Return']).cumprod()-1
google_cummulative_return = (1 + google_data['Daily_Return']).cumprod()-1

fig=go.Figure()

fig.add_trace(go.Scatter(x=amazon_data.index, y=amazon_cummulative_return, name='Amazon',line=dict(color='blue')))
fig.add_trace(go.Scatter(x=google_data.index, y=google_cummulative_return, name='Google',line=dict(color='green')))
fig.update_layout(title='Cumulative Returns For Amazon and Google', xaxis_title='Date', yaxis_title='Cumulative Return',legend=dict(x=0.02, y=0.95))
fig.show()

amazon_volatility = amazon_data['Daily_Return'].std()
google_volatility = google_data['Daily_Return'].std()

fig1=go.Figure()

fig1.add_trace(go.Bar(x=['Amazon', 'Google'], y=[amazon_volatility, google_volatility], text='Volatility',marker=dict(color=['blue', 'green'])))
fig1.update_layout(title='Volatility For Amazon and Google', xaxis_title='Stock', yaxis_title='Volatility (Standard Deviation)',bargap=0.5)
fig1.show()

market_data = yf.download('^GSPC', start=start_date, end=end_date)

amazon_data['Market_Return'] = market_data['Adj Close'].pct_change()
google_data['Market_Return'] = market_data['Adj Close'].pct_change()
market_data['Daily_Return'] = market_data['Adj Close'].pct_change()

cov_amazon = amazon_data['Daily_Return'].cov(google_data['Daily_Return'])
var_market= market_data['Daily_Return'].var()

beta_amazon = cov_amazon/var_market

cov_google = google_data['Daily_Return'].cov(amazon_data['Daily_Return'])
var_market= market_data['Daily_Return'].var()

beta_google = cov_google/var_market

if beta_amazon > beta_google:
    conclusion="Amazon is more volatile Comapred to Google"
else:
   conclusion= "Google is more volatile Compared to Amazon"

print("Beta for Amazon:", beta_amazon)
print("Beta for Google:", beta_google)
print(conclusion)